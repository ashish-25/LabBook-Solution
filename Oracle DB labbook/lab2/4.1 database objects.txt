4.1: Database Objects
1.	Create the Customer table with the following columns. 
CustomerId	Number(5)
Cust_Name	varchar2(20)
Address1	Varchar2(30)
Address2 	Varchar2(30)

SQL> create table Customer(CustomerId number(5),Cust_Name Varchar2(20),Address1 varchar2(20),Address2 varchar2(30));

Table created.




2.	Modify the Customer table Cust_Name column of datatype with Varchar2(30), rename the column to CustomerName and it should not accept Nulls.

SQL> alter table Customer RENAME COLUMN Cust_Name TO CustomerName;

Table altered.

SQL> alter table Customer MODIFY CustomerName not null;

Table altered.

3.	a) Add the following Columns to the Customer table. 
	Gender		Varchar2(1)
	Age		Number(3)
	PhoneNo	Number(10)
	 b) Rename the Customer table to Cust_Table

SQL> alter table Customer ADD (gender varchar2(1),Age number(3),PhoneNo Number(10));

Table altered.


SQL> Rename  Customer to Cust_table;

Table renamed.



4.	Insert rows with the following data in to the Customer table.
	Insert into customer values: (1000, ‘Allen’, ‘#115 Chicago’, ‘#115 Chicago’, ‘M’, ‘25, 7878776’)
	In similar manner, add the below records to the Customer table:
	1001, George, #116 France, #116 France, M, 25, 434524
	1002, Becker, #114 New York, #114 New York, M, 45, 431525
SQL> insert into Cust_table values(1000,'Allen','#115 Chicago','#115 chicago','M',25,7878776);

1 row created.

SQL> insert into Cust_table values(1001,'George','#116 France','#116 France','M',25,434524);

1 row created.

SQL> insert into Cust_table values(1002,'Becker','#114 New York','#114 New York','M',45,431525);


5.	Add the Primary key constraint for Customerld with the name Custld_Prim. 

	SQL> alter table cust_table add constraint custid_prim PRIMARY KEY(customerid);

Table altered.

6.	Insert the row given below in the Customer table and see the message generated by the Oracle server. 
1002, John, #114 Chicago, #114 Chicago, M, 45, 439525
SQL> insert into Cust_table values(1002,'Johm','#114 chicago','#114 chicago','M',45,439535);
insert into Cust_table values(1002,'Johm','#114 chicago','#114 chicago','M',45,439535)
*
ERROR at line 1:
ORA-00001: unique constraint (SYS.CUSTID_PRIM) violated

7.	Disable the constraint on CustomerId, and insert the following data:
1002, Becker, #114 New York, #114 New york , M, 45, 431525
1003, Nanapatekar, #115 India, #115 India , M, 45, 431525

SQL> alter table cust_table disable constraint custid_prim;

Table altered.

SQL> insert into Cust_table values(1002,'Becker','#114 New York','#114 New York','M',45,431525);

1 row created.

SQL> insert into Cust_table values(1003,'Nanapatekar','#115 India','#114 India','M',45,431525);

1 row created.

8.	Enable the constraint on CustomerId of the Customer table, and see the message generated by the Oracle server. 


	SQL> alter table cust_table enable constraint custid_prim;
alter table cust_table enable constraint custid_prim
*
ERROR at line 1:
ORA-02437: cannot validate (SYS.CUSTID_PRIM) - primary key violated

9.	Drop the constraint Custld_Prim on CustomerId and insert the following Data. Alter Customer table, drop constraint Custid_Prim.
1002, Becker, #114 New York, #114 New york , M, 45, 431525, 15000.50
1003, Nanapatekar, #115 India, #115 India , M, 45, 431525, 20000.50


SQL> alter table cust_table drop constraint custid_prim;

Table altered.

SQL> insert into Cust_table values(1002,'Becker','#114 New York','#114 New York','M',45,431525,15000.50);
insert into Cust_table values(1002,'Becker','#114 New York','#114 New York','M',45,431525,15000.50)
            *
ERROR at line 1:
ORA-00913: too many values


SQL> insert into Cust_table values(1003,'Nanapatekar','#115 India','#114 India','M',45,431525,20000.50);
insert into Cust_table values(1003,'Nanapatekar','#115 India','#114 India','M',45,431525,20000.50)
            *
ERROR at line 1:
ORA-00913: too many values

10.	Delete all the existing rows from Customer table, and let the structure remain itself using TRUNCATE statement. 

SQL> truncate table cust_table;

Table truncated.

SQL> select * from cust_table;

no rows selected

11.	In the Customer table, add a column E_mail. 

SQL> alter table cust_table ADD  E_mail varchar2(20);

Table altered.

SQL> select * from cust_table;

no rows selected

SQL> desc cust_table;
 Name                                      Null?    Type
 ----------------------------------------- -------- ----------------------------
 CUSTOMERID                                         NUMBER(5)
 CUSTOMERNAME                              NOT NULL VARCHAR2(20)
 ADDRESS1                                           VARCHAR2(20)
 ADDRESS2                                           VARCHAR2(30)
 GENDER                                             VARCHAR2(1)
 AGE                                                NUMBER(3)
 PHONENO                                            NUMBER(10)
 E_MAIL                                             VARCHAR2(20)

12.	Drop the E_mail column from Customer table. 

	alter table cust_table DROP column E_mail ;

13.	Create the Suppliers table based on the structure of the Customer table. Include only the CustomerId, 
	CustomerName, Address1, Address2, and phoneno columns. 
	Name the columns in the new table as SuppID, SName, Addr1, Addr2, and Contactno respectively. 

SQL> create table suppliers(CustomerId number(5),CustomerName Varchar2(20),Address1 varchar2(20),Address2 varchar2(30),phoneno number(10));

Table created.

SQL> desc suppliers;
 Name                                      Null?    Type
 ----------------------------------------- -------- ----------------------------
 CUSTOMERID                                         NUMBER(5)
 CUSTOMERNAME                                       VARCHAR2(20)
 ADDRESS1                                           VARCHAR2(20)
 ADDRESS2                                           VARCHAR2(30)
 PHONENO                                            NUMBER(10)

SQL> alter table suppliers rename column customerid to suppid;

Table altered.

SQL> alter table suppliers rename column customername to sname;

Table altered.

SQL> alter table suppliers rename column address1 to addr1;

Table altered.

SQL> alter table suppliers rename column address2 to addr2;

Table altered.

SQL> alter table suppliers rename column phoneno to contactno;

Table altered.

SQL> desc suppliers;
 Name                                      Null?    Type
 ----------------------------------------- -------- ----------------------------
 SUPPID                                             NUMBER(5)
 SNAME                                              VARCHAR2(20)
 ADDR1                                              VARCHAR2(20)
 ADDR2                                              VARCHAR2(30)
 CONTACTNO                                          NUMBER(10)


14.	Drop the above table and recreate the following table with the name CustomerMaster. 
CustomerId	Number(5) Primary key(Name of constraint is CustId_PK)
CustomerName	Varchar2(30) Not Null
Addressl	Varchar2(30) Not Null
Address2	Varchar2(30)
Gender		Varchar2(l)
Age		Number(3)
PhoneNo	Number(10)

SQL> drop table suppliers;

Table dropped.

SQL> create table CustomerMaster(CustomerId number(5) constraint Custid_PK primary key,CustomerName Varchar2(30) not null,Address1 varchar2(30) not null,Address2 varchar2(30),gender varchar2(1),age number(3),phoneno number(10));

Table created.

SQL> desc customerMaster;
 Name                                      Null?    Type
 ----------------------------------------- -------- ----------------------------
 CUSTOMERID                                NOT NULL NUMBER(5)
 CUSTOMERNAME                              NOT NULL VARCHAR2(30)
 ADDRESS1                                  NOT NULL VARCHAR2(30)
 ADDRESS2                                           VARCHAR2(30)
 GENDER                                             VARCHAR2(1)
 AGE                                                NUMBER(3)
 PHONENO                                            NUMBER(10)

15.	Create the AccountsMaster table with the following Columns. Use sequence to generate Account number
	Customerld		Number(5)
	AccountNumber		Number(10,2) Primary key(Name of constraint is Acc_PK)
	AccountType		Char(3)
	LedgerBalance		Number(10,2) Not Null

SQL> create table AccountMaster(customerid number(5),accountNUmber number(10,2) constraint Acc_pk primary key,
  2  accounttype char(3),LedgerBalance number(10,2) not null);

SQL> create sequence Acc_number
  2  MINVALUE 1
  3  MAXVALUE 999
  4  START WITH 1
  5  INCREMENT BY 1
  6  NOCACHE
  7  NOCYCLE;

Sequence created.

SQL> desc AccountMaster;
 Name                                      Null?    Type
 ----------------------------------------- -------- ----------------------------
 CUSTOMERID                                         NUMBER(5)
 ACCOUNTNUMBER                             NOT NULL NUMBER(10,2)
 ACCOUNTTYPE                                        CHAR(3)
 LEDGERBALANCE                             NOT NULL NUMBER(10,2)


16.	Relate AccountsMaster table and CustomerMaster table through Customerld column with the constraint name Cust_acc

SQL> alter table accountmaster add constraint cust_acc foreign key(customerid) references customermaster(customerid);

Table altered.


17.	Insert the following rows to the CustomerMaster table:
1000, Allen, #115 Chicago, #115 Chicago, M, 25, 7878776
1001, George, #116 France, #116 France, M, 25, 434524
1002, Becker, #114 New York, #114 New York, M, 45, 431525



SQL> insert into customermaster values(1000,'Allen','#115 Chicago','#115 Chicago','M',25,7878776);

1 row created.

SQL> insert into customermaster values(1001,'George','#116 France','#116 France','M',25,434524);

1 row created.

SQL> insert into customermaster values(1002,'Becker','#114 New York','#114 New York','M',45,431525);

1 row created.


18.	Modify the AccountMaster table with the Check constraint to ensure AccountType should be either NRI or IND.

SQL> alter table accountmaster add constraint ACC_type CHECK(accounttype='NRI' OR accounttype='IND');

Table altered.


19.	Modify the AccountsMaster table keeping a Check constraint with the name Balance_Check for the Minimum Balance which should be greater than 5000. 

SQL> alter table accountmaster add constraint Balance_Check CHECK(ledgerbalance>5000);

Table altered.

20.Modify the AccountsMaster table such that if Customer is deleted from Customer table then all his details should be deleted from AccountsMaster table. 


SQL> alter table accountmaster drop constraint cust_acc;

Table altered.

SQL> alter table accountmaster add constraint cust_acc foreign key(customerid) references customermaster(customerid) on delete cascade;

Table altered.

SQL> select * from accountmaster;

no rows selected

SQL> desc accountmaster;
 Name                                      Null?    Type
 ----------------------------------------- -------- ----------------------------
 CUSTOMERID                                         NUMBER(5)
 ACCOUNTNUMBER                             NOT NULL NUMBER(10,2)
 ACCOUNTTYPE                                        CHAR(3)
 LEDGERBALANCE                             NOT NULL NUMBER(10,2)

SQL> insert into accountmaster values(1001,Acc_Number.nextval,'IND',1000000);

1 row created.

Commit complete.
SQL> select * from accountmaster;

CUSTOMERID ACCOUNTNUMBER ACC LEDGERBALANCE
---------- ------------- --- -------------
      1001             1 IND       1000000

SQL> select * from customermaster;

CUSTOMERID CUSTOMERNAME                   ADDRESS1
---------- ------------------------------ ------------------------------
ADDRESS2                       G        AGE    PHONENO
------------------------------ - ---------- ----------
      1000 Allen                          #115 Chicago
#115 Chicago                   M         25    7878776

      1001 George                         #116 France
#116 France                    M         25     434524

      1002 Becker                         #114 New York
#114 New York                  M         45     431525


SQL> delete from customermaster where customerid=1001;

1 row deleted.

Commit complete.
SQL> select * from customermaster;

CUSTOMERID CUSTOMERNAME                   ADDRESS1
---------- ------------------------------ ------------------------------
ADDRESS2                       G        AGE    PHONENO
------------------------------ - ---------- ----------
      1000 Allen                          #115 Chicago
#115 Chicago                   M         25    7878776

      1002 Becker                         #114 New York
#114 New York                  M         45     431525


SQL> select * from accountmaster;

no rows selected

SQL> insert into customermaster values(1001,'George','#116 France','#116 France','M',25,434524);

1 row created.

21.	Create Backup copy for the AccountsMaster table with the name ‘AccountDetails’. 

SQL> create table AccountDetails as select * from AccountMaster;

Table created.

SQL> desc Accountdetails;
 Name                                      Null?    Type
 ----------------------------------------- -------- ----------------------------
 CUSTOMERID                                         NUMBER(5)
 ACCOUNTNUMBER                                      NUMBER(10,2)
 ACCOUNTTYPE                                        CHAR(3)
 LEDGERBALANCE                             NOT NULL NUMBER(10,2)



22.Create a view ‘Acc_view’ with columns Customerld, CustomerName, AccountNumber, AccountType, and LedgerBalance from AccountsMaster. In the view Acc_view, the column names should be CustomerCode,AccountHolderName, AccountNumber, Type, and Balance for the respective columns from AccountsMaster table.  


SQL> create view Acc_View as select a.Customerid Customercode,c.customerName accountholdername,
  2  a.accountnumber,a.accounttype type,a.ledgerbalance balance from accountmaster a,
  3  customermaster c where a.customerid=c.customerid;

View created.

SQL> select * from Acc_view;

no rows selected

SQL> desc Acc_view;
 Name                                      Null?    Type
 ----------------------------------------- -------- ----------------------------
 CUSTOMERCODE                                       NUMBER(5)
 ACCOUNTHOLDERNAME                         NOT NULL VARCHAR2(30)
 ACCOUNTNUMBER                             NOT NULL NUMBER(10,2)
 TYPE                                               CHAR(3)
 BALANCE                                   NOT NULL NUMBER(10,2)

23.Create a view on AccountsMaster table with name vAccs_Dtls. This view should list all customers whose AccountType is ‘IND’ and their balance amount should not be less than 10000. Using this view any DML operation should not violate the view conditions


SQL> create view vAccs_dtls as select a.Customerid Customercode,c.customerName accountholdername,
  2  a.accountnumber,a.accounttype type,a.ledgerbalance balance from accountmaster a,
  3  customermaster c where a.customerid=c.customerid and a.accounttype='IND' and ledgerbalance>=10000
  4  with check option;

View created.

SQL> desc vAccs_dtls;
 Name                                      Null?    Type
 ----------------------------------------- -------- ----------------------------
 CUSTOMERCODE                                       NUMBER(5)
 ACCOUNTHOLDERNAME                         NOT NULL VARCHAR2(30)
 ACCOUNTNUMBER                             NOT NULL NUMBER(10,2)
 TYPE                                               CHAR(3)
 BALANCE                                   NOT NULL NUMBER(10,2)


24.	Create a view accsvw10 which will not allow DML statement against it.
	SQL> create view accsvw10 as select a.Customerid Customercode,c.customerName accountholdername,
  2  a.accountnumber,a.accounttype type,a.ledgerbalance balance from accountmaster a,
  3  customermaster c where a.customerid=c.customerid with read only;

View created.

SQL> desc accsvw10;
 Name                                      Null?    Type
 ----------------------------------------- -------- ----------------------------
 CUSTOMERCODE                                       NUMBER(5)
 ACCOUNTHOLDERNAME                         NOT NULL VARCHAR2(30)
 ACCOUNTNUMBER                             NOT NULL NUMBER(10,2)
 TYPE                                               CHAR(3)
 BALANCE                                   NOT NULL NUMBER(10,2)

25.	Create a Sequence with the name Seq_Dept on Deptno column of Department_Masters table. It should start from 40 and stop at 200. Increment parameter for the sequence Seq_Dept should be in step of 10.


SQL> create sequence seq_dept
  2  MINVAlUE 20
  3  MAXVALUE 200
  4  INCREMENT by 10
  5  nocache
  6  nocycle;

Sequence created.

26.	Insert three sample rows by using the above sequence in Department_Masters table.


SQL> insert into department_master values(seq_dept.nextval,'CIVIL');

1 row created.

Commit complete.

SQL> insert into department_master values(seq_dept.nextval,'AI');

1 row created.

Commit complete.
SQL> insert into department_master values(seq_dept.nextval,'MBA');

1 row created.

Commit complete.
SQL> select * from department_master;

 DEPT_CODE DEPT_NAME
---------- --------------------------------------------------
        91 CSE
        92 IT
        93 EEE
        94 ECE
        95 MECH
        20 CIVIL
        30 AI
        40 MBA

8 rows selected.


27.	Drop the Seq_Dept sequence. 

SQL> drop sequence seq_dept;

Sequence dropped.

28.	Get information on the index No_Name from the Data Dictionary. 


SQL> create index no_name on department_master(dept_name);
SQL> select * from department_master where dept_name='AI';

 DEPT_CODE DEPT_NAME
---------- --------------------------------------------------
        30 AI
29.	Create synonym synEmp for the EMP table. 

SQL> create synonym synEmp for emp;

Synonym created.

30.	Get Information on synonym synEmp from the Data Dictionary. 

SQL> select * from synEmp;

    EMPNNO ENAME      JOB              MGR HIREDATE         SAL       COMM
---------- ---------- --------- ---------- --------- ---------- ----------
    DEPTNO
----------
       101 raj        Asst_prof          1 20-JAN-00      25000       5000
        11

       102 ram        Prof               2 22-JAN-01      25500      10000
        11

       103 sanjay     Sr_prof            2 22-FEB-99      30500      12000
        11


    EMPNNO ENAME      JOB              MGR HIREDATE         SAL       COMM
---------- ---------- --------- ---------- --------- ---------- ----------
    DEPTNO
----------
       104 yogesh     Asst_prof          1 22-FEB-02      20500      11000
        12

       105 deepika    Prof               2 22-FEB-07      25500      11900
        12


31.	Note: Perform this after creating the Employee Table mentioned in the next Lab assignment. Create Index on HireDate column and give the name as idx_emp_hiredate for this object. 

SQL> create index idx_emp_hiredate on employee(hiredate);

Index created.


32.	Create a Sequence with the name Seq_Emp on Empno column of Employee table. It should start from 1001. Try to set Minimum value for this sequence which is less than / greater than 1001, use the sequence to generate Empno while inserting records in Employee table and check the values generated.


SQL> create sequence seq_emp
  2  start with 1001
  3  minvalue 1001
  4  nocache
  5  nocycle;

Sequence created.

SQL> insert into employee values
  2  (seq_emp.nextval,'sppo','dev',null,'20-sep-19',20000,null,72);


    EMPNNO ENAME      JOB              MGR HIREDATE         SAL       COMM
---------- ---------- --------- ---------- --------- ---------- ----------
    DEPTNO
----------
      1002 sppo       dev                  20-SEP-19      20000
        72


